#LyX 2.0 created this file. For more info see http://www.lyx.org/
\lyxformat 413
\begin_document
\begin_header
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language british
\language_package default
\inputencoding auto
\fontencoding global
\font_roman default
\font_sans default
\font_typewriter default
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100
\font_tt_scale 100

\graphics truetex
\default_output_format pdf2
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_amsmath 1
\use_esint 1
\use_mhchem 1
\use_mathdots 1
\cite_engine basic
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\use_refstyle 1
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
ANNBug
\end_layout

\begin_layout Author
Martin B.
 K.
 Gr√∏nholdt
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Goal
\end_layout

\begin_layout Itemize
Create a artificial neural network that evolves
\end_layout

\begin_layout Itemize
Feed-forward neural network
\end_layout

\begin_layout Itemize
Genetic algorithm to evolve the weights
\end_layout

\begin_layout Itemize
Create a sandbox for the networks to play
\begin_inset Newpage pagebreak
\end_inset


\end_layout

\begin_layout Part
Implementation
\end_layout

\begin_layout Section
Language
\end_layout

\begin_layout Standard
ANNBug is implemented in python as i find it a good language to prototype
 ideas quickly.
 At a later stage the project might move on to mobile devices, and it is
 the hope that P4A, for Android devices, will make this step relatively
 painless.
\end_layout

\begin_layout Section
Functional blocks
\end_layout

\begin_layout Itemize
Feed-forward neural network
\end_layout

\begin_layout Itemize
Genetic Algorithm
\end_layout

\begin_layout Itemize
Sandbox world
\end_layout

\begin_layout Subsection
Feed-forward neural network
\end_layout

\begin_layout Standard
The artificial neural network code, deals with processing the input.
 No learning algorithm are implemented.
\end_layout

\begin_layout Subsubsection
Neuron
\end_layout

\begin_layout Paragraph
Data
\end_layout

\begin_layout Itemize
Inputs
\end_layout

\begin_layout Itemize
Weights
\end_layout

\begin_layout Itemize
Output
\end_layout

\begin_layout Paragraph
Methods
\end_layout

\begin_layout Itemize
Update the output when the input changes
\end_layout

\begin_deeper
\begin_layout Itemize
Apply the weighs to the input to get the activation value
\end_layout

\begin_layout Itemize
Apply the transfer function to the activation value
\end_layout

\end_deeper
\begin_layout Subsubsection
Layer
\end_layout

\begin_layout Paragraph
Data
\end_layout

\begin_layout Itemize
A number of neurons
\end_layout

\begin_layout Itemize
Since this is a feed-forward network, each neuron is expected to have an
 input connected to each input of the layer
\end_layout

\begin_layout Itemize
A list of output values from each neuron
\end_layout

\begin_layout Paragraph
Methods
\end_layout

\begin_layout Itemize
Update the output on request
\end_layout

\begin_deeper
\begin_layout Itemize
For each neuron, apply the inputs
\end_layout

\begin_layout Itemize
Change the output list accordingly
\end_layout

\end_deeper
\begin_layout Subsubsection
Net
\end_layout

\begin_layout Paragraph
Data
\end_layout

\begin_layout Itemize
Input layer
\end_layout

\begin_layout Itemize
Hidden layer(s)
\end_layout

\begin_layout Itemize
Output layer
\end_layout

\begin_layout Paragraph
Methods
\end_layout

\begin_layout Itemize
Update the output on request
\end_layout

\begin_deeper
\begin_layout Itemize
Apply input data to the input layer
\end_layout

\begin_layout Itemize
Apply the output of each layer to the input of the next one
\end_layout

\end_deeper
\begin_layout Subsubsection
References
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Artificial_neuron
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://en.wikipedia.org/wiki/Artificial_neural_network
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.ai-junkie.com/ann/evolved/nnt1.html
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Genetic Algorithm
\end_layout

\begin_layout Standard
Genetic Algorithm is used to evolve the weights of the ANN
\begin_inset Foot
status open

\begin_layout Plain Layout
Artificial Neural Network
\end_layout

\end_inset

.
 The weights of an ANN are represented by a chromosome.
\end_layout

\begin_layout Itemize
Chromosome
\end_layout

\begin_layout Itemize
Genetic Algorithm
\end_layout

\begin_layout Subsubsection
Chromosome
\end_layout

\begin_layout Standard
A chromosome represents the weights of the neural network as a list of decimal
 values.
 
\end_layout

\begin_layout Paragraph
Data
\end_layout

\begin_layout Standard
Two types of chromosome representation are implemented:
\end_layout

\begin_layout Itemize
Binary represented chromosomes, chromosomes with each DNA represented as
 a binary value.
\begin_inset Note Note
status collapsed

\begin_layout Plain Layout
Binary chromosomes are only used in the genetic test program gentest.py
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Decimal represented chromosomes, chromosomes with each DNA represented as
 a decimal value.
\end_layout

\begin_layout Paragraph
Methods
\end_layout

\begin_layout Subsubsection
References
\end_layout

\begin_layout Itemize
\begin_inset Flex URL
status open

\begin_layout Plain Layout

http://www.ai-junkie.com/ga/intro/gat1.html
\end_layout

\end_inset


\end_layout

\end_body
\end_document
